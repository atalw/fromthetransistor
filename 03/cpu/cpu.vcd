$date
	Sat Jun 11 22:27:06 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 32 ! out_Y [31:0] $end
$var wire 4 " out_CNZV [3:0] $end
$var reg 1 # in_Carry $end
$var reg 32 $ in_Op2 [31:0] $end
$var reg 4 % in_Opcode [3:0] $end
$var reg 32 & in_Rn [31:0] $end
$scope module a $end
$var wire 1 # in_Carry $end
$var wire 32 ' in_Op2 [31:0] $end
$var wire 4 ( in_Opcode [3:0] $end
$var wire 32 ) in_Rn [31:0] $end
$var wire 4 * out_CNZV [3:0] $end
$var wire 32 + out_Y [31:0] $end
$var wire 32 , ad_Y [31:0] $end
$var wire 4 - ad_CNZV [3:0] $end
$var reg 1 . ad_Carry $end
$var reg 32 / ad_Op2 [31:0] $end
$var reg 32 0 ad_Rn [31:0] $end
$var reg 4 1 r_CNZV [3:0] $end
$var reg 32 2 r_Y [31:0] $end
$scope module adder $end
$var wire 1 . in_Carry $end
$var wire 32 3 in_Op2 [31:0] $end
$var wire 32 4 in_Rn [31:0] $end
$var wire 4 5 out_CNZV [3:0] $end
$var wire 32 6 out_Y [31:0] $end
$var reg 4 7 r_CNZV [3:0] $end
$var reg 32 8 r_Y [31:0] $end
$var integer 32 9 idx [31:0] $end
$scope function one_bit_add $end
$var reg 1 : a $end
$var reg 1 ; b $end
$var reg 1 < carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x<
x;
x:
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
0.
b0 -
b0 ,
b0 +
b0 *
bx )
bx (
bx '
bx &
bx %
bx $
x#
b0 "
b0 !
$end
#1
b1 9
0:
0;
0<
#2
b10 9
#3
b11 9
#4
b100 9
#5
b101 9
#6
b110 9
#7
b111 9
#8
b1000 9
#9
b1001 9
#10
b1010 9
#11
b1011 9
#12
b1100 9
#13
b1101 9
#14
b1110 9
#15
b1111 9
#16
b10000 9
#17
b10001 9
#18
b10010 9
#19
b10011 9
#20
b10100 9
#21
b10101 9
#22
b10110 9
#23
b10111 9
#24
b11000 9
#25
b11001 9
#26
b11010 9
#27
b11011 9
#28
b11100 9
#29
b11101 9
#30
b11110 9
#31
b11111 9
#32
b10 -
b10 5
b10 7
b100000 9
#100
b0 9
b10 "
b10 *
b10 1
b1 /
b1 3
b1 0
b1 4
b100 %
b100 (
0#
b1 $
b1 '
b1 &
b1 )
#101
b1010 "
b1010 *
b1010 1
b1 /
b1 3
b1 0
b1 4
b1 9
b1010 -
b1010 5
b1010 7
1:
1;
#102
b10 !
b10 +
b10 2
b10 "
b10 *
b10 1
b1 /
b1 3
b1 0
b1 4
b10 9
b10 -
b10 5
b10 7
b10 ,
b10 6
b10 8
0:
0;
1<
#103
b11 9
0<
#104
b100 9
#105
b101 9
#106
b110 9
#107
b111 9
#108
b1000 9
#109
b1001 9
#110
b1010 9
#111
b1011 9
#112
b1100 9
#113
b1101 9
#114
b1110 9
#115
b1111 9
#116
b10000 9
#117
b10001 9
#118
b10010 9
#119
b10011 9
#120
b10100 9
#121
b10101 9
#122
b10110 9
#123
b10111 9
#124
b11000 9
#125
b11001 9
#126
b11010 9
#127
b11011 9
#128
b11100 9
#129
b11101 9
#130
b11110 9
#131
b11111 9
#132
b0 "
b0 *
b0 1
b10 !
b10 +
b10 2
b1 /
b1 3
b1 0
b1 4
b0 -
b0 5
b0 7
b0 9
#133
b1000 "
b1000 *
b1000 1
b10 !
b10 +
b10 2
b1 /
b1 3
b1 0
b1 4
b1 9
b1000 -
b1000 5
b1000 7
1:
1;
#134
b0 "
b0 *
b0 1
b10 !
b10 +
b10 2
b1 /
b1 3
b1 0
b1 4
b10 9
b0 -
b0 5
b0 7
0:
0;
1<
#135
b11 9
0<
#136
b100 9
#137
b101 9
#138
b110 9
#139
b111 9
#140
b1000 9
#141
b1001 9
#142
b1010 9
#143
b1011 9
#144
b1100 9
#145
b1101 9
#146
b1110 9
#147
b1111 9
#148
b10000 9
#149
b10001 9
#150
b10010 9
#151
b10011 9
#152
b10100 9
#153
b10101 9
#154
b10110 9
#155
b10111 9
#156
b11000 9
#157
b11001 9
#158
b11010 9
#159
b11011 9
#160
b11100 9
#161
b11101 9
#162
b11110 9
#163
b11111 9
#164
b100000 9
#200
b0 9
b10 !
b10 +
b10 2
b11 /
b11 3
b10 0
b10 4
b11 $
b11 '
b10 &
b10 )
#201
b11 !
b11 +
b11 2
b11 /
b11 3
b10 0
b10 4
b1 9
b11 ,
b11 6
b11 8
1;
#202
b1000 "
b1000 *
b1000 1
b1 !
b1 +
b1 2
b11 /
b11 3
b10 0
b10 4
b10 9
b1000 -
b1000 5
b1000 7
b1 ,
b1 6
b1 8
1:
#203
b0 "
b0 *
b0 1
b101 !
b101 +
b101 2
b11 /
b11 3
b10 0
b10 4
b11 9
b0 -
b0 5
b0 7
b101 ,
b101 6
b101 8
0:
0;
1<
#204
b100 9
0<
#205
b101 9
#206
b110 9
#207
b111 9
#208
b1000 9
#209
b1001 9
#210
b1010 9
#211
b1011 9
#212
b1100 9
#213
b1101 9
#214
b1110 9
#215
b1111 9
#216
b10000 9
#217
b10001 9
#218
b10010 9
#219
b10011 9
#220
b10100 9
#221
b10101 9
#222
b10110 9
#223
b10111 9
#224
b11000 9
#225
b11001 9
#226
b11010 9
#227
b11011 9
#228
b11100 9
#229
b11101 9
#230
b11110 9
#231
b11111 9
#232
b100000 9
#300
